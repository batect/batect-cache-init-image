name: Pipeline

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: docker.pkg.github.com/${{ github.repository }}/cache-init:${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: '1.14'

      - name: Setup golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b /usr/local/bin v1.23.8

      - name: Restore cache
        uses: actions/cache@preview
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-${{ hashFiles('**/go.sum') }}

      - name: Check for missing license header
        run: ./scripts/check_licenses.sh

      - name: Lint
        run: golangci-lint run .

      - name: Build application
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o docker/app .

      - name: Build image
        run: docker build -t $IMAGE_TAG docker
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      - name: Run tests
        run: go test .
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      - name: Log in to Docker
        if: github.repository == 'batect/batect-cache-init-image' && github.ref == 'refs/heads/master'
        run: docker login -u $GITHUB_USERNAME -p $GITHUB_TOKEN docker.pkg.github.com
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}

      - name: Push image
        if: github.repository == 'batect/batect-cache-init-image' && github.ref == 'refs/heads/master'
        run: docker push $IMAGE_TAG
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      - name: Update image reference in main batect repo
        if: github.repository == 'batect/batect-cache-init-image' && github.ref == 'refs/heads/master'
        run: ./scripts/update_batect_image_ref.sh
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
